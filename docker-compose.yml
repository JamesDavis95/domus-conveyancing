services:
  api:
    build: .
    command: ['python','-m','uvicorn','app_clean:app','--host','0.0.0.0','--port','8000']
    env_file: .env
    ports: ["8000:8000"]
    depends_on: [postgres, redis, minio, clamav, createbucket]

  worker:
    build: .
    command: ['python','worker.py']
    env_file: .env
    depends_on: [redis, postgres, minio, clamav]

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: dev
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports: ["9000:9000","9001:9001"]
    volumes:
      - miniodata:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 20

  createbucket:
    image: minio/mc
    depends_on: [minio]
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      until (mc alias set local http://minio:9000 minioadmin minioadmin) do
        echo 'waiting for minio...'; sleep 2;
      done &&
      (mc ls local/domus || mc mb local/domus) &&
      mc anonymous set download local/domus;
      "

  clamav:
    image: mkodockx/docker-clamav:alpine
    ports: ["3310:3310"]

  caddy:
    image: caddy:2
    ports: ["80:80"]
    depends_on: [api]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile

  prometheus:
    image: prom/prometheus:latest
    ports: ["9090:9090"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on: [api]

volumes:
  pgdata: {}
  miniodata: {}
